class Solution
{
    public:
    //Function to merge k sorted arrays.
    class node{
    public:     
         int data;
         int i;
         int j;
         node(int data, int row, int col){
             this->data = data;
             this->i = row;
             this->j = col;
         }
    };
    
    class compare{
      public:  
        bool operator()(node*a, node* b){
            return a->data > b->data;
        }
    };
    
    vector<int> mergeKArrays(vector<vector<int>> arr, int K)
    {
        //code here
     priority_queue<node*, vector<node*>, compare>pq;        
     vector<int>ans;
     //step1---> put all elements in  min heap;
     for(int i=0; i<K; i++){
         node* temp = new node(arr[i][0], i, 0);
         pq.push(temp);
     }
    
        while(!pq.empty()){
            node*temp = pq.top();
            ans.push_back(temp->data);
            pq.pop();
            
            int i= temp->i;
            int j= temp->j;
            
            if(j+1 < arr[i].size()){
                node* next = new node(arr[i][j+1], i, j+1);
                pq.push(next);
            }
        }
        return ans;
    }
